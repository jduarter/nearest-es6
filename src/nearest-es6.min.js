/*!
* Ported from jQuery Nearest plugin v1.4.0 (2011-2015 Gilmore Davidson under the MIT licence)
*   http://gilmoreorless.github.io/jquery-nearest/LICENSE.txt
*
* Ported to pure ES6 by: Jorge Duarte Rodriguez <info@malagadev.com>
* August 2018
*/
const rPerc=/^([\d.]+)%$/;class NearestError extends Error{constructor(t,e){super(e),this.stack=(new Error).stack,this.typeString=t,this.message=e}}export default class Nearest{constructor(t,e,o){if(!t||void 0===t.x||void 0===t.y)throw new NearestError("INVALID_POINT","Invalid point");this.defaults={x:0,y:0,w:0,h:0,tolerance:1,container:document,furthest:!1,includeSelf:!1,sameX:!1,sameY:!1,onlyX:!1,onlyY:!1,directionConstraints:[],sort:!1};let r=Object.assign({},this.defaults,t,{});e||(e="div");let s,n,i,l={left:o.offsetLeft,top:o.offsetTop},c=[o.clientWidth||0,o.clientHeight||0],a={x:[l.left,l.left+c[0]],y:[l.top,l.top+c[1]],w:[0,c[0]],h:[0,c[1]]},f=r.directionConstraints;for(s in console.log("containerWH: ",c,o),a)a.hasOwnProperty(s)&&(i=rPerc.exec(r[s]))&&(n=a[s],r[s]=(n[1]-n[0])*i[1]/100+n[0]);"object"==typeof f&&!1!==f.isArray()||(f="string"==typeof f?[f]:[]),!1===r.sameX&&!1===r.checkHoriz&&(r.sameX=!r.checkHoriz),!1===r.sameY&&!1===r.checkVert&&(r.sameY=!r.checkVert),console.log("FIND ",e," in CONTAINER (INIT CACHE)");let h=o.querySelectorAll(e),d=[],p=!!r.furthest,y=!r.sameX,u=!r.sameY,x=!!r.onlyX,g=!!r.onlyY,m=p?0:1/0,N=parseFloat(r.x)||0,I=parseFloat(r.y)||0,C=parseFloat(N+r.w)||N,k=parseFloat(I+r.h)||I,A={x1:N,y1:I,x2:C,y2:k},E=parseFloat(r.tolerance)||0,F=Math.min,w=Math.max;E<0&&(E=0),console.log("FIND: ",h),h.forEach((t,e)=>{let o,r,s,n={left:t.offsetLeft,top:t.offsetTop},i=n.left,l=n.top,c=i+t.clientWidth,a=l+t.clientHeight,h=w(i,N),H=F(c,C),D=w(l,I),X=F(a,k),Y={x1:i,y1:l,x2:c,y2:a},O=H>=h,T=X>=D;if(y&&u||!y&&!u&&O&&T||y&&T||u&&O||y&&x||u&&g){o=O?0:h-H,r=T?0:D-X,s=x||g?x?o:r:O||T?w(o,r):Math.sqrt(o*o+r*r);let e=p?s>=m-E:s<=m+E;this.checkDirectionConstraints(A,Y,f)||(e=!1),e&&(console.log("GANADOR: ",t),m=p?w(m,s):F(m,s),d.push({node:t,dist:s}))}}),console.log("CACHE IS: ",d),d.sort(function(t,e){return t.dist-e.dist});let H,D,X,Y,O=d.length,T=[];if(O)for(p?(H=m-E,D=m):(H=m,D=m+E),X=0;X<O;X++)(Y=d[X]).dist>=H&&Y.dist<=D&&T.push(Y.node);return console.log("Filtered is: ",T),T.length,T}checkDirectionConstraints(t,e,o){let r={left:t.x1>e.x1,right:t.x2<e.x2,top:t.y1>e.y1,bottom:t.y2<e.y2};return o.reduce(function(t,e){return t&&!!r[e]},!0)}};
